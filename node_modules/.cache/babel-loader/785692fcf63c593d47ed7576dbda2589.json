{"ast":null,"code":"var _jsxFileName = \"/Users/adnaneghalem2/DevProjects/reactgsheet/src/components/GoogleDownload/index.jsx\";\nimport React, { useEffect } from 'react';\nimport { gapi } from 'gapi-script';\nimport { createGoogleSheet } from '../../spreadsheet/sheets';\nimport { REACT_APP_API_KEY, REACT_APP_CLIENT_ID } from '../../.env';\nexport function GoogleDownload(data) {\n  useEffect(function () {\n    handleClientLoad();\n  }, []); // On load, called to load the auth2 library and API client library.\n\n  function handleClientLoad() {\n    gapi.load('client:auth2', initClient);\n  } // Initializes the API client library and sets up sign-in state listeners.\n\n\n  function initClient() {\n    gapi.client.init({\n      apiKey: 'AIzaSyDT7tboB6TsbFzN9WRDrZ223yNlj__DrGc',\n      clientId: '459822625837-fdbtu872stqltes7otv0koebrihb1r8b.apps.googleusercontent.com',\n      discoveryDocs: [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\n      scope: \"https://www.googleapis.com/auth/spreadsheets\",\n      jsSrc: 'https://apis.google.com/js/api.js'\n    }).then(function () {\n      // Listen for sign-in state changes.\n      gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus); // Handle the initial sign-in state.\n\n      updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n    }, function (error) {\n      console.log(error); // add something for error handling\n    });\n  } // Called when the signed in status changes, to update the UI appropriately. After a sign-in, the API is called.\n\n\n  function updateSigninStatus(isSignedIn) {\n    var authorizeButton = document.getElementById('authorize_button');\n    var signoutButton = document.getElementById('signout_button');\n    var downloadButton = document.getElementById('download_button');\n\n    if (isSignedIn) {\n      authorizeButton.style.display = \"none\";\n      signoutButton.style.display = \"block\";\n      downloadButton.style.display = \"block\";\n    } else {\n      authorizeButton.style.display = \"block\";\n      signoutButton.style.display = \"none\";\n      downloadButton.style.display = \"none\";\n    }\n  } // Sign in the user upon button click.\n\n\n  function handleAuthClick(event) {\n    gapi.auth2.getAuthInstance().signIn();\n  } // Sign out the user upon button click.\n\n\n  function handleSignoutClick(event) {\n    gapi.auth2.getAuthInstance().signOut();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"script\", {\n    async: true,\n    defer: true,\n    src: \"https://apis.google.com/js/api.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"authorize_button\",\n    onClick: handleAuthClick,\n    display: updateSigninStatus,\n    className: \"block googleauth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Authorize Google Login\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"signout_button\",\n    onClick: handleSignoutClick,\n    display: updateSigninStatus,\n    className: \"block googlesignout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Sign Out of Google\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"download_button\",\n    onClick: function onClick() {\n      return createGoogleSheet(data.data);\n    },\n    className: \"block google\",\n    display: updateSigninStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Download Data to Google Sheets\"));\n}","map":{"version":3,"sources":["/Users/adnaneghalem2/DevProjects/reactgsheet/src/components/GoogleDownload/index.jsx"],"names":["React","useEffect","gapi","createGoogleSheet","REACT_APP_API_KEY","REACT_APP_CLIENT_ID","GoogleDownload","data","handleClientLoad","load","initClient","client","init","apiKey","clientId","discoveryDocs","scope","jsSrc","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","window","get","error","console","log","authorizeButton","document","getElementById","signoutButton","downloadButton","style","display","handleAuthClick","event","signIn","handleSignoutClick","signOut"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { gapi } from 'gapi-script';\nimport { createGoogleSheet } from '../../spreadsheet/sheets'\nimport { REACT_APP_API_KEY,  REACT_APP_CLIENT_ID} from '../../.env'\nexport function GoogleDownload(data) {\n\n    useEffect(() => {\n        handleClientLoad();\n    }, []);\n\n\n\n     // On load, called to load the auth2 library and API client library.\n\n     function handleClientLoad() {\n        gapi.load('client:auth2', initClient);\n      }\n\n\n     // Initializes the API client library and sets up sign-in state listeners.\n\n      function initClient() {\n        gapi.client.init({\n          apiKey: 'AIzaSyDT7tboB6TsbFzN9WRDrZ223yNlj__DrGc',\n          clientId: '459822625837-fdbtu872stqltes7otv0koebrihb1r8b.apps.googleusercontent.com',\n          discoveryDocs: [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\n          scope: \"https://www.googleapis.com/auth/spreadsheets\",\n          jsSrc: 'https://apis.google.com/js/api.js'\n        }).then(function () {\n\n          // Listen for sign-in state changes.\n  gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n          // Handle the initial sign-in state.\n          updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n        }, function(error) {\n            console.log(error) // add something for error handling\n        });\n      }\n\n      // Called when the signed in status changes, to update the UI appropriately. After a sign-in, the API is called.\n\n      function updateSigninStatus(isSignedIn) {\n        const authorizeButton = document.getElementById('authorize_button');\n        const signoutButton = document.getElementById('signout_button');\n        const downloadButton = document.getElementById('download_button');\n\n        if (isSignedIn) {\n          authorizeButton.style.display = \"none\";\n          signoutButton.style.display = \"block\";\n          downloadButton.style.display = \"block\";\n        } else {\n          authorizeButton.style.display = \"block\";\n          signoutButton.style.display = \"none\";\n          downloadButton.style.display = \"none\";\n        }\n      }\n\n      // Sign in the user upon button click.\n\n      function handleAuthClick(event) {\n        gapi.auth2.getAuthInstance().signIn();\n      }\n\n      // Sign out the user upon button click.\n\n      function handleSignoutClick(event) {\n        gapi.auth2.getAuthInstance().signOut();\n      }\n\n\n\n\n    return (\n        <div>\n                  <script async defer src=\"https://apis.google.com/js/api.js\"></script>\n\n\n            <button id=\"authorize_button\"  onClick={handleAuthClick} display={updateSigninStatus} className=\"block googleauth\">Authorize Google Login</button>\n\n            <button id=\"signout_button\"  onClick={handleSignoutClick} display={updateSigninStatus} className=\"block googlesignout\">Sign Out of Google</button>\n\n            <button id=\"download_button\" onClick={() => createGoogleSheet(data.data)} className=\"block google\" display={updateSigninStatus}>Download Data to Google Sheets</button> \n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}