{"ast":null,"code":"export function addFormatting(spreadsheet) {\n  const spreadsheetId = spreadsheet.spreadsheetId;\n  const sheet1Id = spreadsheet.sheets[0].properties.sheetId;\n  const sheet2Id = spreadsheet.sheets[1].properties.sheetId;\n  const requests = [{\n    repeatCell: {\n      range: {\n        sheetId: sheet1Id,\n        startRowIndex: 0,\n        endRowIndex: 1\n      },\n      cell: {\n        userEnteredFormat: {\n          textFormat: {\n            bold: true\n          }\n        }\n      },\n      fields: \"userEnteredFormat.textFormat.bold\"\n    }\n  }, // BOLD TEXT IN FIRST COLUMN\n  {\n    repeatCell: {\n      range: {\n        sheetId: sheet1Id,\n        startColumnIndex: 0,\n        endColumnIndex: 1\n      },\n      cell: {\n        userEnteredFormat: {\n          textFormat: {\n            bold: true\n          }\n        }\n      },\n      fields: \"userEnteredFormat.textFormat.bold\"\n    }\n  }];\n  const body = {\n    requests: requests\n  };\n  window.gapi.client.sheets.spreadsheets.batchUpdate({\n    spreadsheetId: spreadsheetId,\n    resource: body\n  }).then(response => {\n    console.log(`formatting and conditional formatting updated.`);\n  });\n}","map":{"version":3,"sources":["/Users/adnaneghalem2/DevProjects/reactgsheet/src/spreadsheet/addFormatting.jsx"],"names":["addFormatting","spreadsheet","spreadsheetId","sheet1Id","sheets","properties","sheetId","sheet2Id","requests","repeatCell","range","startRowIndex","endRowIndex","cell","userEnteredFormat","textFormat","bold","fields","startColumnIndex","endColumnIndex","body","window","gapi","client","spreadsheets","batchUpdate","resource","then","response","console","log"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,WAAvB,EAAoC;AACvC,QAAMC,aAAa,GAAGD,WAAW,CAACC,aAAlC;AACA,QAAMC,QAAQ,GAAGF,WAAW,CAACG,MAAZ,CAAmB,CAAnB,EAAsBC,UAAtB,CAAiCC,OAAlD;AACA,QAAMC,QAAQ,GAAGN,WAAW,CAACG,MAAZ,CAAmB,CAAnB,EAAsBC,UAAtB,CAAiCC,OAAlD;AAEA,QAAME,QAAQ,GAAG,CACf;AACEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AACLJ,QAAAA,OAAO,EAAEH,QADJ;AAELQ,QAAAA,aAAa,EAAE,CAFV;AAGLC,QAAAA,WAAW,EAAE;AAHR,OADG;AAMVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,iBAAiB,EAAE;AACjBC,UAAAA,UAAU,EAAE;AACVC,YAAAA,IAAI,EAAE;AADI;AADK;AADf,OANI;AAaVC,MAAAA,MAAM,EAAE;AAbE;AADd,GADe,EAmBf;AACA;AACER,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AACLJ,QAAAA,OAAO,EAAEH,QADJ;AAELe,QAAAA,gBAAgB,EAAE,CAFb;AAGLC,QAAAA,cAAc,EAAE;AAHX,OADG;AAMVN,MAAAA,IAAI,EAAE;AACJC,QAAAA,iBAAiB,EAAE;AACjBC,UAAAA,UAAU,EAAE;AACVC,YAAAA,IAAI,EAAE;AADI;AADK;AADf,OANI;AAaVC,MAAAA,MAAM,EAAE;AAbE;AADd,GApBe,CAAjB;AAuCA,QAAMG,IAAI,GAAG;AAACZ,IAAAA,QAAQ,EAAEA;AAAX,GAAb;AAEAa,EAAAA,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBnB,MAAnB,CAA0BoB,YAA1B,CAAuCC,WAAvC,CAAmD;AACjDvB,IAAAA,aAAa,EAAEA,aADkC;AAEjDwB,IAAAA,QAAQ,EAAEN;AAFuC,GAAnD,EAGGO,IAHH,CAGSC,QAAD,IAAc;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAa,gDAAb;AACD,GALD;AAMD","sourcesContent":["export function addFormatting(spreadsheet) {\n    const spreadsheetId = spreadsheet.spreadsheetId;\n    const sheet1Id = spreadsheet.sheets[0].properties.sheetId\n    const sheet2Id = spreadsheet.sheets[1].properties.sheetId\n  \n    const requests = [\n      { \n        repeatCell: {\n          range: {\n            sheetId: sheet1Id,\n            startRowIndex: 0,\n            endRowIndex: 1\n          },\n          cell: {\n            userEnteredFormat: {\n              textFormat: {\n                bold: true\n              }\n            }\n          },\n          fields: \"userEnteredFormat.textFormat.bold\"\n        }\n      },\n  \n      // BOLD TEXT IN FIRST COLUMN\n      { \n        repeatCell: {\n          range: {\n            sheetId: sheet1Id,\n            startColumnIndex: 0,\n            endColumnIndex: 1\n          },\n          cell: {\n            userEnteredFormat: {\n              textFormat: {\n                bold: true\n              }\n            }\n          },\n          fields: \"userEnteredFormat.textFormat.bold\"\n        }\n      },\n    ];\n  \n    const body = {requests: requests}\n  \n    window.gapi.client.sheets.spreadsheets.batchUpdate({\n      spreadsheetId: spreadsheetId,\n      resource: body\n    }).then((response) => {\n      console.log(`formatting and conditional formatting updated.`);\n    });\n  }"]},"metadata":{},"sourceType":"module"}