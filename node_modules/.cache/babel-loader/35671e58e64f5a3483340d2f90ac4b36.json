{"ast":null,"code":"var _jsxFileName = \"/Users/adnaneghalem2/DevProjects/reactgsheet/src/components/GoogleDownload/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { createGoogleSheet } from '../../spreadsheet/sheets';\nimport { REACT_APP_API_KEY, REACT_APP_CLIENT_ID } from '../../.env';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GoogleDownload(data) {\n  _s();\n\n  useEffect(() => {\n    initClient();\n  }, []); // On load, called to load the auth2 library and API client library.\n\n  function handleClientLoad() {// window.gapi.load('client:auth2', initClient);\n  } // Initializes the API client library and sets up sign-in state listeners.\n\n\n  function initClient() {\n    window.gapi.client.init({\n      apiKey: '459822625837-fdbtu872stqltes7otv0koebrihb1r8b.apps.googleusercontent.com',\n      clientId: '',\n      discoveryDocs: [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\n      scope: \"https://www.googleapis.com/auth/spreadsheets\"\n    }).then(function () {\n      // Listen for sign-in state changes.\n      window.gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus); // Handle the initial sign-in state.\n\n      updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n    }, function (error) {\n      console.log(error); // add something for error handling\n    });\n  } // Called when the signed in status changes, to update the UI appropriately. After a sign-in, the API is called.\n\n\n  function updateSigninStatus(isSignedIn) {\n    const authorizeButton = document.getElementById('authorize_button');\n    const signoutButton = document.getElementById('signout_button');\n    const downloadButton = document.getElementById('download_button');\n\n    if (isSignedIn) {\n      authorizeButton.style.display = \"none\";\n      signoutButton.style.display = \"block\";\n      downloadButton.style.display = \"block\";\n    } else {\n      authorizeButton.style.display = \"block\";\n      signoutButton.style.display = \"none\";\n      downloadButton.style.display = \"none\";\n    }\n  } // Sign in the user upon button click.\n\n\n  function handleAuthClick(event) {\n    window.gapi.auth2.getAuthInstance().signIn();\n  } // Sign out the user upon button click.\n\n\n  function handleSignoutClick(event) {\n    window.gapi.auth2.getAuthInstance().signOut();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"authorize_button\",\n      onClick: handleAuthClick,\n      display: updateSigninStatus,\n      className: \"block googleauth\",\n      children: \"Authorize Google Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"signout_button\",\n      onClick: handleSignoutClick,\n      display: updateSigninStatus,\n      className: \"block googlesignout\",\n      children: \"Sign Out of Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"download_button\",\n      onClick: () => createGoogleSheet(data.data),\n      className: \"block google\",\n      display: updateSigninStatus,\n      children: \"Download Data to Google Sheets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GoogleDownload, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GoogleDownload;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleDownload\");","map":{"version":3,"sources":["/Users/adnaneghalem2/DevProjects/reactgsheet/src/components/GoogleDownload/index.jsx"],"names":["React","useEffect","createGoogleSheet","REACT_APP_API_KEY","REACT_APP_CLIENT_ID","GoogleDownload","data","initClient","handleClientLoad","window","gapi","client","init","apiKey","clientId","discoveryDocs","scope","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","error","console","log","authorizeButton","document","getElementById","signoutButton","downloadButton","style","display","handleAuthClick","event","signIn","handleSignoutClick","signOut"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,iBAAT,EAA6BC,mBAA7B,QAAuD,YAAvD;;AACA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAAA;;AAEjCL,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT,CAFiC,CAOhC;;AAEC,WAASC,gBAAT,GAA4B,CAC1B;AACD,GAX8B,CAahC;;;AAEC,WAASD,UAAT,GAAsB;AACpBE,IAAAA,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,IAAnB,CAAwB;AACtBC,MAAAA,MAAM,EAAE,0EADc;AAEtBC,MAAAA,QAAQ,EAAE,EAFY;AAGtBC,MAAAA,aAAa,EAAE,CAAC,0DAAD,CAHO;AAItBC,MAAAA,KAAK,EAAE;AAJe,KAAxB,EAKGC,IALH,CAKQ,YAAY;AAElB;AACRR,MAAAA,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,GAAoCC,UAApC,CAA+CC,MAA/C,CAAsDC,kBAAtD,EAH0B,CAKlB;;AACAA,MAAAA,kBAAkB,CAACb,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,GAAoCC,UAApC,CAA+CG,GAA/C,EAAD,CAAlB;AACD,KAZD,EAYG,UAASC,KAAT,EAAgB;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADe,CACI;AACtB,KAdD;AAeD,GA/B8B,CAiC/B;;;AAEA,WAASF,kBAAT,CAA4BF,UAA5B,EAAwC;AACtC,UAAMO,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAxB;AACA,UAAMC,aAAa,GAAGF,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAtB;AACA,UAAME,cAAc,GAAGH,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAvB;;AAEA,QAAIT,UAAJ,EAAgB;AACdO,MAAAA,eAAe,CAACK,KAAhB,CAAsBC,OAAtB,GAAgC,MAAhC;AACAH,MAAAA,aAAa,CAACE,KAAd,CAAoBC,OAApB,GAA8B,OAA9B;AACAF,MAAAA,cAAc,CAACC,KAAf,CAAqBC,OAArB,GAA+B,OAA/B;AACD,KAJD,MAIO;AACLN,MAAAA,eAAe,CAACK,KAAhB,CAAsBC,OAAtB,GAAgC,OAAhC;AACAH,MAAAA,aAAa,CAACE,KAAd,CAAoBC,OAApB,GAA8B,MAA9B;AACAF,MAAAA,cAAc,CAACC,KAAf,CAAqBC,OAArB,GAA+B,MAA/B;AACD;AACF,GAjD8B,CAmD/B;;;AAEA,WAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B1B,IAAAA,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,GAAoCiB,MAApC;AACD,GAvD8B,CAyD/B;;;AAEA,WAASC,kBAAT,CAA4BF,KAA5B,EAAmC;AACjC1B,IAAAA,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,GAAoCmB,OAApC;AACD;;AAKH,sBACI;AAAA,4BAEI;AAAQ,MAAA,EAAE,EAAC,kBAAX;AAA+B,MAAA,OAAO,EAAEJ,eAAxC;AAAyD,MAAA,OAAO,EAAEZ,kBAAlE;AAAsF,MAAA,SAAS,EAAC,kBAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAQ,MAAA,EAAE,EAAC,gBAAX;AAA6B,MAAA,OAAO,EAAEe,kBAAtC;AAA0D,MAAA,OAAO,EAAEf,kBAAnE;AAAuF,MAAA,SAAS,EAAC,qBAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI;AAAQ,MAAA,EAAE,EAAC,iBAAX;AAA6B,MAAA,OAAO,EAAE,MAAMpB,iBAAiB,CAACI,IAAI,CAACA,IAAN,CAA7D;AAA0E,MAAA,SAAS,EAAC,cAApF;AAAmG,MAAA,OAAO,EAAEgB,kBAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA7EejB,c;;KAAAA,c","sourcesContent":["import React, { useEffect } from 'react';\nimport { createGoogleSheet } from '../../spreadsheet/sheets'\nimport { REACT_APP_API_KEY,  REACT_APP_CLIENT_ID} from '../../.env'\nexport function GoogleDownload(data) {\n\n    useEffect(() => {\n        initClient();\n    }, []);\n\n\n     // On load, called to load the auth2 library and API client library.\n\n      function handleClientLoad() {\n        // window.gapi.load('client:auth2', initClient);\n      }\n\n     // Initializes the API client library and sets up sign-in state listeners.\n\n      function initClient() {\n        window.gapi.client.init({\n          apiKey: '459822625837-fdbtu872stqltes7otv0koebrihb1r8b.apps.googleusercontent.com',\n          clientId: '',\n          discoveryDocs: [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\n          scope: \"https://www.googleapis.com/auth/spreadsheets\"\n        }).then(function () {\n\n          // Listen for sign-in state changes.\n  window.gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n          // Handle the initial sign-in state.\n          updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n        }, function(error) {\n            console.log(error) // add something for error handling\n        });\n      }\n\n      // Called when the signed in status changes, to update the UI appropriately. After a sign-in, the API is called.\n\n      function updateSigninStatus(isSignedIn) {\n        const authorizeButton = document.getElementById('authorize_button');\n        const signoutButton = document.getElementById('signout_button');\n        const downloadButton = document.getElementById('download_button');\n\n        if (isSignedIn) {\n          authorizeButton.style.display = \"none\";\n          signoutButton.style.display = \"block\";\n          downloadButton.style.display = \"block\";\n        } else {\n          authorizeButton.style.display = \"block\";\n          signoutButton.style.display = \"none\";\n          downloadButton.style.display = \"none\";\n        }\n      }\n\n      // Sign in the user upon button click.\n\n      function handleAuthClick(event) {\n        window.gapi.auth2.getAuthInstance().signIn();\n      }\n\n      // Sign out the user upon button click.\n\n      function handleSignoutClick(event) {\n        window.gapi.auth2.getAuthInstance().signOut();\n      }\n\n\n\n\n    return (\n        <div>\n\n            <button id=\"authorize_button\"  onClick={handleAuthClick} display={updateSigninStatus} className=\"block googleauth\">Authorize Google Login</button>\n\n            <button id=\"signout_button\"  onClick={handleSignoutClick} display={updateSigninStatus} className=\"block googlesignout\">Sign Out of Google</button>\n\n            <button id=\"download_button\" onClick={() => createGoogleSheet(data.data)} className=\"block google\" display={updateSigninStatus}>Download Data to Google Sheets</button> \n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}